Stakeholders (and potential future stakeholders):
1. In-house employees
   a. Hiring manager
     - finding the best fit for the job
   b. Recruiters
     - filling the role in a timely manner
   c. HR
     - app permissions don't compromise data or results
     - auditability
   d. Future engineers
     - dev ex + maintainability
2. Applicants
   - accurately showcasing their skills
   - able to apply for more than one job
3. Data purchasers
   - risk assessment 

will we track anything about the offers we make after approval + during the negotiation stage?
do we need to track the milestones / stages of an applicant or just the final approve / reject decision?
will we be including a reason for the final decision (other than the applicant's notes)?
will we be tracking whether an applicant has accepted an offer?
should applicants be assigned to a user (hiring manager etc) in any way?
do we need to know whether we are waiting on an applicant or an applicant is waiting on us?
what metrics do we care about? (IE do we want things like the source of the application, total number of interviews, time between first contact and offer, time between offer and acceptance, etc?)
Will there be a webhook / some other integration here?
do we need to update any other (third party or internal) systems of events in our system?	Not for your initial submission																								


will we limit the length of a note about an applicant?	Use your judgement																								








enum offer_states {
  pending
  accepted
  rejected
}

enum application_states {
  resume_review
  recruiter_interview
  take_home_project
  technical_interview
  offer_negotiation
  offer_accepted
  offer_rejected
  approved
  rejected
}

enum application_decisions {
  approved
  rejected
}

Table application_states {
  id integer [pk]
  state application_states
}

Table application_transitions {
  id integer [pk]
  application_id integer
  application_state_id integer
  transitioned_at timestamp
  updated_at timestamp
  created_at timestamp
}

Table applications {
  id integer [pk]
  application_state_id integer
  submitted_at timestamp
  updated_at timestamp
  created_at timestamp
}

Table applicants {
  id integer [pk]
  user_id integer [pk, ref: - users.id]
  updated_at timestamp
  created_at timestamp
}

Table application_applicants {
  applicant_id integer [pk, ref: - applicants.id]
  application_id integer [pk, ref: - applications.id]
}

Table offers {
  id integer [pk]
  job_id integer
  application_id integer
  status offer_states
  updated_at timestamp
  created_at timestamp
}

Table jobs {
  id integer [pk]
  application_id integer
  title varchar
  updated_at timestamp
  created_at timestamp
}

Table applicant_notes {
  id integer [pk]
  application_id integer
  author_user_id integer
  applicant_id integer
  text varchar
  updated_at timestamp
  created_at timestamp
}

Table users {
  id integer [pk]
  username varchar
  first_name varchar
  last_name varchar
  updated_at timestamp
  created_at timestamp
}

Ref: "applicant_notes"."application_id" > "applications"."id"
Ref: "applicant_notes"."applicant_id" > "applicants"."id"
Ref: "applicant_notes"."author_user_id" > "users"."id"
Ref: "jobs"."application_id" < "applications"."id"
Ref: "offers"."job_id" > "jobs"."id"
Ref: "applications"."id" < "offers"."application_id"
Ref: "applications"."id" < "application_transitions"."application_id"
Ref: "application_states"."id" < "application_transitions"."application_state_id"
Ref: "application_states"."id" < "applications"."application_state_id"





















enum applicant_states {
  approved
  rejected
}

Table application_states {
  id integer [pk]
  state application_states
}

Table applicant_transitions {
  id integer [pk]
  applicant_id integer
  applicant_state_id integer
  transitioned_at timestamp
  updated_at timestamp
  created_at timestamp
}


Table applicants {
  id integer [pk]
  user_id integer
  updated_at timestamp
  created_at timestamp
}


Table jobs {
  id integer [pk]
  applicant_id integer
  title varchar
  updated_at timestamp
  created_at timestamp
}

Table applicant_notes {
  id integer [pk]
  user_id integer
  applicant_id integer
  text varchar
  updated_at timestamp
  created_at timestamp
}

Table users {
  id integer [pk]
  username varchar
  email varchar [unique]
  first_name varchar
  last_name varchar
  password varchar
  is_staff boolean
  is_active boolean
  is_superuser boolean
  last_login timestamp
  date_joined timestamp
}

Ref: "applicant_notes"."applicant_id" > "applicants"."id"
Ref: "applicant_notes"."user_id" > "users"."id"
Ref: "jobs"."applicant_id" < "applicants"."id"
Ref: "applicants"."id" < "applicant_transitions"."applicant_id"
Ref: "application_states"."id" < "applicant_transitions"."applicant_state_id"



Ref: "users"."id" < "applicants"."user_id"
